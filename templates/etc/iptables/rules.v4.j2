# {{ ansible_managed }}

*filter

##
# base filter policy
##

:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

##
# generic rules for all hosts
##

# allow loopback
-A INPUT -i lo -j ACCEPT

# allow icmp echo requests
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT

# allow established connections
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

##
# host specific rules
##

{% for rule in iptables_rules %}
-A INPUT -p {{ rule.protocol }} {% if rule.interface is defined %}-i {{ rule.interface }} {% endif %}{% if rule.source is defined %}-s {{ rule.source }} {% endif %}--dport {{ rule.destination_port }} {% if rule.match is defined %}-m {{ rule.match }} {{ rule.match_options }} {% endif %}-j {{ rule.jump }}
{% endfor %}

{% if iptables_user_droplist is defined %}
##
# user-blocklist with logging
##

-N {{ iptables_user_droplist_chain }}
-I INPUT 1 -j {{ iptables_user_droplist_chain }}
{% for address in iptables_user_droplist %}
-A {{ iptables_user_droplist_chain }} -s {{ address }} -j LOG --log-prefix "[USER BLOCK] " -m limit --limit 3/min --limit-burst 10
-A {{ iptables_user_droplist_chain }} -s {{ address }} -j DROP
{% endfor %}
{% endif %}

{% if iptables_enable_spamhaus_droplist %}
##
# spamhaus-droplist
##
-N {{ iptables_spamhaus_droplist_chain }}
-I INPUT 1 -j {{ iptables_spamhaus_droplist_chain }}
{% endif %}

COMMIT

*nat

##
# base nat policy
##

:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
COMMIT

*mangle

##
# base mangle policy
##

:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
COMMIT
